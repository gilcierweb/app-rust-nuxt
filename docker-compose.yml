services:
  app:
    container_name: apirust
    build:
      context: ./api-rust
      dockerfile: Dockerfile.rust
      args:
        DATABASE_URL: postgres://postgres:postgres@database:5432/postgres 
    tty: true
    restart: always
    depends_on:
      - database
      #- redis
    ports: 
      - '8080:8080'
    volumes:
      - .:/app  
    env_file: api-rust/.env
#    environment:
    networks:
      - rustnet

  database:
    container_name: database
    image: postgres:16.2-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5437:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - rustnet
  
  app-nuxt:
    container_name: app-nuxt
    build:
      context: ./app-nuxt
      dockerfile: Dockerfile.nuxt
    tty: true
    restart: always
    ports: 
      - '3000:3000'
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    networks:
      - rustnet
    depends_on:
      - app
    
    # entrypoint: bash -c "ls -laH && find . -name 'index.mjs' "

#  redis:
#    image: redis:7.2.4-alpine
#    ports:
#      - '6379:6379'

volumes:
  db_data:

networks:
  rustnet:
    driver: bridge